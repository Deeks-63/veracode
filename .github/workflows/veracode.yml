# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'

     # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Build the application
    - name: Build the application
      run: dotnet build --configuration debug  #TODO:- //need to write the output folder 

    - run: zip -r veracode-scan-target.zip ./

    - name: Veracode Upload And Scan
      uses: veracode/veracode-uploadandscan-action@0.2.1
      with:
        # appname
        appname: Kitchen OS
        # filepath
        filepath: veracode-scan-target.zip #Path to dlls/src/jars/wars....
        # version
        version: ${{ github.run_id }}
        # vid
        vid: ${{ secrets.VERACODE_API_ID }}
        # vkey
        vkey: ${{ secrets.VERACODE_API_KEY }}
        # true or false
        createsandbox: false
        # name of the sandbox
        sandboxname: 
        # wait X minutes for the scan to complete
        scantimeout: 0
        # business criticality - policy selection
        criticality: "High"

    # download the Veracode Static Analysis Pipeline scan jar
    - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - run: unzip -o pipeline-scan-LATEST.zip

    - uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: 'temurin'
    - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file veracode-scan-target.zip
      continue-on-error: true
    - name: Convert pipeline scan output to SARIF format
      id: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
      with:
        pipeline-results-json: results.json
    - uses: github/codeql-action/upload-sarif@v3
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
